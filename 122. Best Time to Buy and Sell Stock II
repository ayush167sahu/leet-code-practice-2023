class Solution {
public:
    int solve(int i,int buy,vector<int>& prices,vector<vector<int>> &dp)
    {
        if(i==prices.size())
        {
            return 0;
        }
        if(dp[i][buy]!=-1)
        {
            return dp[i][buy];
        }

        if(buy==1)
        {
            //buy or skip
            return dp[i][buy] =max(  -prices[i]+solve(i+1,0,prices,dp) , 0+solve(i+1,1,prices,dp)  );

        }
        else
        {
            //sell or skip
            return dp[i][buy] = max( prices[i]+solve(i+1,1,prices,dp),0+solve(i+1,0,prices,dp));
        }
    }
    int maxProfit(vector<int>& prices) 
    {
        int n = prices.size();
        vector<vector<int>> dp(prices.size()+1,vector<int>(2,-1));
        return solve(0,1,prices,dp);
    }
};
