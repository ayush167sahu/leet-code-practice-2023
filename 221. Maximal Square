class Solution {
public:
    int solve(vector<vector<char>>& matrix,int i,int j,int&maxi,vector<vector<int>>&dp)
    {
        //base case 
        //if the element goes out of bound 
        if(i>=matrix.size() || j>=matrix[0].size())
        {
            return 0;
        }
        //small calculations
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        int a = solve(matrix,i+1,j,maxi,dp);
        int b = solve(matrix,i+1,j+1,maxi,dp);
        int c = solve(matrix,i,j+1,maxi,dp);

        if(matrix[i][j]=='1')
        {
            dp[i][j] =1+min(a,min(b,c));
            maxi =max(maxi,dp[i][j]);

            return dp[i][j] ; 
        }
        else
        {
            return 0;
        }
    }
    int maximalSquare(vector<vector<char>>& matrix) 
    {
        int maxi = 0;
        vector<vector<int>> dp( matrix.size(),vector<int>(matrix[0].size(),-1) ) ;
        solve(matrix,0,0,maxi,dp);

        return maxi*maxi;

    }
};
