the qstn is to find the kth largest element in O(n) time complexity 
to find in the given complexity we have to use priority quwuw
to find the kth largest elemenet we have to use min heap
to find the kth smallest element we have to use max heap;
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) 
    {
        //our aim is to do it in time complexity of O(n)
        //but if we sort and find it becomes O[nlogn]
        //so we have to use priority queue
        priority_queue< int,vector<int>,greater<int> > pq;

        for(int i=0;i<k;i++)
        {
            pq.push(nums[i]);
        }

        for(int i=k;i<nums.size();i++)
        {
           if(nums[i]>pq.top())
           {
               pq.pop();
               pq.push(nums[i]);
           }
        }
        return pq.top();
    }
};
