47-permutations II
class Solution {
public:
    void solve(vector<int>& nums,vector<int> &arr,set<vector<int>> &st,vector<int>&freq)
    {
        if(arr.size()==nums.size())
        {
            st.insert(arr);
            return;
        }
        for(int i = 0; i<nums.size() ;i++)
        {
            if(!freq[i])
           {

            arr.push_back(nums[i]);
            freq[i]=1;
            solve(nums,arr,st,freq);
            freq[i]=0;
            arr.pop_back();
           }
        }
      //  return;
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) 
    {
       vector<int> arr;
       int n = nums.size();
       vector<int> freq(n,0);
       set<vector<int>> st;
       vector<vector<int>> ans;
       solve(nums,arr,st,freq);
       //set<vector<int>>::iterator it;
       for (auto itr = st.begin(); itr != st.end(); itr++)
       {
         ans.push_back(*itr);
       }

       return ans;   
    }
};
