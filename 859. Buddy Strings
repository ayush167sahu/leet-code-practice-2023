    bool buddyStrings(string s, string g) 
    {
        if(s.length()!=g.length() || s.length()<=1)
        {
            return false;
        }
        if(s==g)
        {
            
            unordered_set<char> distinctChars(s.begin(), s.end());

            return distinctChars.size() < s.length();
        }
        vector<int> ans;

        for(int i=0;i<s.length();i++)
        {
            if(s[i]!=g[i])
            {
                ans.push_back(i);
            }
        }
        if(ans.size()==2)
        {
            swap(s[ans[0]],s[ans[1]]);
        }

        return (s==g);
    }
