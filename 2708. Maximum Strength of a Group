class Solution {
public:
    long long maxStrength(vector<int>& nums) 
    {
        long long ans =1;
        vector<int> posi,nega,zero; 
        int n = nums.size();
        for(int i=0;i<n;i++)
        {
            if(nums[i]>0)
            {
                posi.push_back(nums[i]);
            }
            else if(nums[i]<0)
            {
               nega.push_back(-nums[i]);
            }
            else
            {
                zero.push_back(0);
            }
        }
        sort(nega.begin(),nega.end(),greater<int>());
        if(posi.size()>0)
        {
            for(int i=0;i<posi.size();i++)
            {
                ans*=posi[i];
            }
        

            if(nega.size()>1)
           {
               int size = nega.size();
               if(size%2!=0)
               size--;
               for(int i=0;i<size;i++)
               {
                  ans*=nega[i];
               }
         }
         return ans;
        }
        else if(nega.size()>1)
        {
            ans =1;
            int size = nega.size();
            if(size%2!=0)
            size--;
            for(int i=0;i<size;i++)
            {
                ans*=nega[i];
            }
            return ans;
        }
        else
        {
             if(nega.size()==1 && zero.size()!=0)
             {
                 return 0;
             }
             else if(zero.size()!=0)
             {
                 return 0;
             }
             else
             {
                 return -nega[0];
             }
        }

    }
};
