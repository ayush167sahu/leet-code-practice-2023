37. Sudoku Solver
Write a program to solve a Sudoku puzzle by filling the empty cells.

A sudoku solution must satisfy all of the following rules:

Each of the digits 1-9 must occur exactly once in each row.
Each of the digits 1-9 must occur exactly once in each column.
Each of the digits 1-9 must occur exactly once in each of the 9 3x3 sub-boxes of the grid.
The '.' character indicates empty cells.
//****************************************************************************************************
class Solution {
public:
    bool isSafe(int row,int col,vector<vector<char>>& board,char val)
    {
        int n= board[0].size();

        for(int i = 0;i<n;i++)
        {
            //checking in row
            if(board[row][i]==val)
            {
                return false;
            }
            //checking in col
            if(board[i][col]==val)
            {
                return false;
            }
            //checking samller matrix
            if(board[3* (row/3) + i/3][3* (col/3) + i%3]==val)
            {
                return false;
            }
        }
        return true;
    }
    bool solve(vector<vector<char>>& board)
    {
        int n = board[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(board[i][j]=='.')
                {
                    for(char val = '1';val<='9';val++)
                    {
                        if(isSafe(i,j,board,val))
                        {
                            board[i][j] = val;
                            bool nextEmptySpace = solve(board);
                            if(nextEmptySpace==true)
                            {
                                return true;
                            }
                            else
                            {
                             //backtrack;
                             board[i][j] = '.';
                            }
                        }
                    }
                    return false;
                }
                
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<char>>& board) 
    {
        solve(board);

    }
};
