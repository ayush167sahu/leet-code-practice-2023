107. Binary Tree Level Order Traversal II
//this qstn is solved using the levelorder approach
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) 
    {
        vector<vector<int>> v1;
        queue<TreeNode*> q;
        if(root==NULL)
          return v1;
        
        q.push(root);

        while(q.empty()!=1)
        {
            vector<int> v;
            int size = q.size();
            while(size--)
            {   
                
                TreeNode* temp = q.front();
                q.pop();
                v.push_back(temp->val);
                if(temp->left!=NULL)
                  q.push(temp->left);
                if(temp->right!=NULL)
                  q.push(temp->right);

            }
            v1.push_back(v);
        }
        reverse(v1.begin(),v1.end());

        return v1;
            
    }
};
