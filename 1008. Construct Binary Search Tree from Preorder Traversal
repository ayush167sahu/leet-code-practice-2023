1008. Construct Binary Search Tree from Preorder Traversal
approach: we will place the root in the rage ie in between infinity to minus infinity
the right node will be in range -infinity to root->val
the left node will be in range root->val to infinity
class Solution {
public:
    TreeNode* convert(int mini,int maxi,vector<int> &preorder,int &i)
    {
        if(i>=preorder.size())
           return NULL;

        if(preorder[i]<mini || preorder[i]>maxi)
           return NULL;
        //making the front node as root;
        TreeNode* root = new TreeNode(preorder[i++]);
        //left subtree
        root->left = convert(mini,root->val,preorder,i);
        root->right = convert(root->val,maxi,preorder,i);

        return root;

    }
    TreeNode* bstFromPreorder(vector<int>& preorder) 
    {

        int mini = INT_MIN;
        int maxi = INT_MAX;
        int i = 0;
        return convert(mini,maxi,preorder,i);



    }
};
